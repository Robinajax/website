<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>The ZipCPU by Gisselquist Technology</title>
    <description>The ZipCPU blog, featuring how to discussions of FPGA and CPU design. This site will be focused on Verilog solutions, using exclusively OpenSource IP products for FPGA design.
</description>
    <link>http://zipcpu.com/</link>
    <atom:link href="http://zipcpu.com/feed.xml" rel="self" type="application/rss+xml"/>
    <pubDate>Thu, 18 May 2017 08:44:15 -0400</pubDate>
    <lastBuildDate>Thu, 18 May 2017 08:44:15 -0400</lastBuildDate>
    <generator>Jekyll v3.0.1</generator>
    
      <item>
        <title>Most common Digilent FPGA support requests</title>
        <description>&lt;p&gt;I’ve been watching the &lt;a href=&quot;https://forum.digientinc.com&quot;&gt;Digilent Forum’s&lt;/a&gt;, and
I’ve now seen some very common requests for FPGA help that keep coming back
over and over again.  I’ll separate these into three groups, and share them
here with you.  They are actual hardware problems, beginner problems, and
Vivado problems.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Actual Hardware Problems&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;– Device not found.&lt;/p&gt;

&lt;p&gt;User’s seem to have a problem getting their tools set up properly.
   I certainly did.
   One particular problem is basically, “I just plugged in my device and
   my computer doesn’t recognize it.”  This is commonly caused by an
   invalid or incomplete tool-suite setup.  However, it can be caused by a
   bad USB cable.  So, usually, if the device &lt;em&gt;was&lt;/em&gt; working, it
   tends to be instead a bad USB cable.  Strangely enough, bad USB cables a
   rather common occurrence on the forums.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The solution&lt;/strong&gt;: It depends on the problem&lt;/p&gt;

&lt;p&gt;– There’s the FTDI request.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Many individuals have tried, either by accident or on purpose, reflashing
the FTDI interface chip on their board and, as a result, have broken their
board so badly that it no longer responds to configuration commands.  The
solution to this problem is that the Digilent staff will send this user a
private message with the correct software to reload onto their device.

The strange part of this request is that I am aware of one user who
has successfully reprogrammed the FT2232 chip on his board, and
achieved much higher data throughput as a result.
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;The solution&lt;/strong&gt;: The Digilent staff provides a private message containing
   instructions and/or data to fix this problem.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Beginner problems&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;– I need to build (some instructor’s problem statement).  Please help me.&lt;/p&gt;

&lt;p&gt;This request gets the least help from members on the forum.  The response
   is usually a kind pointer to where the user documentation is at and
   nothing more.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The solution&lt;/strong&gt;:  The student needs to do his own homework.&lt;/p&gt;

&lt;p&gt;– Help me, my design doesn’t work.&lt;/p&gt;

&lt;p&gt;I’ll come back to this in a moment, but many students think that
   an experienced engineer can just deskcheck their work and find the bug.
   While I enjoy the challenge, and while I can often do this, it
   certainly wasn’t how I became an &lt;em&gt;experienced&lt;/em&gt; engineer when working
   with FPGAs.  I got there through simulation to make sure my logic
   worked, and using a scope (or scopes) to make sure my simulation
   matched the device.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The solution&lt;/strong&gt;: The solution is to simulate the design together with a
   simulated peripheral.  This is often how I find bugs in students serial
   port designs, for example.  I’ll connect their design to a &lt;a href=&quot;https://github.com/ZipCPU/wbuart32/blob/master/bench/cpp/uartsim.cpp&quot;&gt;serial port
   simulator&lt;/a&gt;,
   create a &lt;a href=&quot;https://en.wikipedia.org/wiki/Value_change_dump&quot;&gt;.vcd file&lt;/a&gt; for
   viewing in &lt;a href=&quot;http://gtkwave.sourceforge.net&quot;&gt;gtkwave&lt;/a&gt;, and write back about
   what I found.  There’s no reason why the student couldn’t have done this.&lt;/p&gt;

&lt;p&gt;Perhaps I’ll post these results for the next student I help?&lt;/p&gt;

&lt;p&gt;– Asynchronous Reset&lt;/p&gt;

&lt;p&gt;While Xilinx devices support an asynchronous reset to the logic, it’s so
   unreliable that &lt;a href=&quot;https://forums.xilinx.com/t5/PLD-Blog/That-Dangerous-Asynchronous-Reset/ba-p/12856&quot;&gt;they recommend users not use it&lt;/a&gt;.  This is usually a
   student’s first project on an actual FPGA, and a beginner’s mistake.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The solution&lt;/strong&gt;: Get rid of the &lt;em&gt;negedge&lt;/em&gt; &lt;em&gt;reset&lt;/em&gt; from any always block
   dependencies.  Replace these with a combination of &lt;em&gt;initial&lt;/em&gt; statements and
   (if necessary) synchronous resets.&lt;/p&gt;

&lt;p&gt;– The logic Clock&lt;/p&gt;

&lt;p&gt;Many new FPGA users aren’t quite aware the clocks are special things.
   They then create logic wires internal to their design which they wish
   to use to divide this clock rate.  While not a problem, such logic
   wires don’t have the reliability of a clock, and transitioning on their
   edges doesn’t produce the result you will want.  Where the problem comes
   into play is when the student wants their logic to transition on the
   positive (or worse negative) edge of this clock.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The solution&lt;/strong&gt;: &lt;a href=&quot;https://www.quora.com/What-is-the-function-of-a-strobe-function-in-digital-system&quot;&gt;a logic strobe&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;This solution finds a lot of application in 1. beginning FPGA student
  designs, and then again in 2. signal processing designs, where the
  device’s clock speed is not synchronized to the FPGA’s clock, and hence
  the data comes in from the sensor at a slower speed than the devices
  clock speed.&lt;/p&gt;

&lt;p&gt;– The student who hasn’t simulated their design&lt;/p&gt;

&lt;p&gt;In this case, someone new to FPGA design has created some design and it
  doesn’t work.  They don’t know why.  This one is similar to the Vivado
  library component problem: they have no idea what’s going on internal
  to the FPGA to answer the “why won’t my program work” question.&lt;/p&gt;

&lt;p&gt;The solution they want to this problem is not the industry solution.
  What these students want is for some kind soul on the forum to look at
  their code and tell them what they are doing wrong.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The industry solution&lt;/strong&gt; to this problem is to simulate the code and any
  peripherals it might be working with, and then as part of that to verify
  that the logic works as intended.&lt;/p&gt;

&lt;p&gt;– They don’t know how to simulate their problem&lt;/p&gt;

&lt;p&gt;Sometimes the user is trying to work with a piece of hardware they’ve
   never worked with before.  As a result, they have no simulation for this
   hardware because they just aren’t all that familiar with how it works.
   (A user button is a good example of this, since bouncing isn’t something
   most people place into simulators.) In this case, their design doesn’t work
   on the real hardware and, again, they don’t know why.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The solution&lt;/strong&gt; to this problem is twofold.  First, build a simulator that
   encapsulates your understaning of the hardware from the diagrams and
   specifications you have.  Second, when that first part fails, use some
   form of a  scope to measure what is actually going on across the wires
   to/from the hardware.&lt;/p&gt;

&lt;p&gt;– Crossing clock domains&lt;/p&gt;

&lt;p&gt;Few students have ever heard of &lt;a href=&quot;https://en.wikipedia.org/wiki/Metastability_in_electronics&quot;&gt;metastability
   problems&lt;/a&gt;.  As
   a result, they write code that crosses clock domains realizing that there
   might be a problem associated with doing so.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The solution&lt;/strong&gt;: The simple solution is to clock every input at the new
   clock twice before using it.  This works for some things, though not all.
   A more complete discussion of how to deal with crossing from one clock
   can be found in &lt;a href=&quot;http://www.sunburst-design.com/papers/CummingsSNUG2008Boston_CDC.pdf&quot;&gt;this
   article&lt;/a&gt;.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Vivado problems&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;– The demo doesn’t build&lt;/p&gt;

&lt;p&gt;Typically this is caused by the user trying to build the demo design
   using one version of Vivado, while the demo was instead built with
   another version of Vivado.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The solution&lt;/strong&gt;: The Digilent staff share what version of Vivado was used
   to build the demo.  Sometimes the demo has gotten old, and the Digilent
   staff need to update it.&lt;/p&gt;

&lt;p&gt;– They’ve integrated some component from the Vivado library into their design
  and “it’s not working”&lt;/p&gt;

&lt;p&gt;Of all the times I’ve seen this problem, it has yet to be that the Xilinx
  provided IP component doesn’t work.  It’s more often that the user isn’t
  feeding the component properly, or using the results from the component
  properly.  Making the problem worse, rarely has the user taken the time to
  instrument what is going on, so they have no clue where their problem lies.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The solution&lt;/strong&gt;: a good internal scope, such as the
  &lt;a href=&quot;https://github.com/ZipCPU/wbscope&quot;&gt;wishbone scope&lt;/a&gt; or the &lt;a href=&quot;https://github.com/ZipCPU/wbscope/blob/master/rtl/axi4lscope.v&quot;&gt;AXI-Lite
  scope&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;– The user can’t figure out how to add custom IP to the Vivado flow&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;The solution&lt;/strong&gt;: Well, I might be biased here, but … my solution to
   this problem has been not to use the broken Vivado design flow.
   I’m sure I’ll discuss more of my problems with there processing flow as time
   goes on.&lt;/p&gt;

&lt;p&gt;One of the pleasant things about the &lt;a href=&quot;https://forum.digilentinc.com&quot;&gt;Digilent
forums&lt;/a&gt; is that these common requests are dealt
with in a friendly manner–even though I’m certain someone must be rolling their
eyes at seeing the same request &lt;em&gt;again&lt;/em&gt;.&lt;/p&gt;

</description>
        <pubDate>Thu, 18 May 2017 00:00:00 -0400</pubDate>
        <link>http://zipcpu.com/digilent/2017/05/18/most-common-digilent-support-requests.html</link>
        <guid isPermaLink="true">http://zipcpu.com/digilent/2017/05/18/most-common-digilent-support-requests.html</guid>
        
        
        <category>digilent</category>
        
      </item>
    
      <item>
        <title>Cannot be done</title>
        <description>&lt;p&gt;One common request on Digilent is the, “Can I do XYZ on board ABC”?&lt;/p&gt;

&lt;p&gt;I really despise answering questions of this type.  I’ve been surprised too many
times by someone doing what I thought was impossible.  Indeed, I’ve also had my
own opportunities to surprise others by doing things they thought were
impossible.&lt;/p&gt;

&lt;p&gt;A couple examples should illustrate this point:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;I gave up early on the idea of building a Video game on a &lt;a href=&quot;https://store.digilentinc.com/basys-3-artix-7-fpga-trainer-board-recommended-for-introductory-users/&quot;&gt;Basys-3
  board&lt;/a&gt;.
  I figured the task was just plain impossible: although you can make
  a 128kB of block RAM on the board, there wasn’t enough memory on
  the board for a 640x480 piece of video memory, with a bare minimum of four
  bits per pixel (256kB required) and the Basys-3 &lt;em&gt;only&lt;/em&gt; has the
  block RAM on board.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Since giving up, I discovered some individuals had done it.  Digging into
  those who were willing to share, I learned how they had done it.  They took
  the video stream, and wrote characters directly on the stream using FPGA
  hardware.  That way, there was no storage requirement.  I had already done
  something similar to place a mouse on the screen, so I shouldn’t have been
  as surprised as I was.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;When presenting at &lt;a href=&quot;https://orconf.org/2016/&quot;&gt;ORCONF&lt;/a&gt; some time ago, I had
  the opportunity to meet my first Digilent employee.  When I shared with him
  what &lt;a href=&quot;https://github.com/ZipCPU/s6soc&quot;&gt;I had done&lt;/a&gt; with their
  &lt;a href=&quot;https://store.digilentinc.com/store.digilentinc.com/cmod-s6-breadboardable-spartan-6-fpga-module&quot;&gt;CMod S6&lt;/a&gt;, and specifically how I had managed
  to place a multi-tasking O/S (as I called it) on the board, he was
  exceptionally impressed.  Particularly since he had written off the board as
  being unfit for this type of task.&lt;/li&gt;
&lt;/ol&gt;

</description>
        <pubDate>Thu, 18 May 2017 00:00:00 -0400</pubDate>
        <link>http://zipcpu.com/digilent/2017/05/18/cannnot-be-done.html</link>
        <guid isPermaLink="true">http://zipcpu.com/digilent/2017/05/18/cannnot-be-done.html</guid>
        
        
        <category>digilent</category>
        
      </item>
    
      <item>
        <title>Welcome to the ZipCPU blog!</title>
        <description>&lt;p&gt;Hello, and welcome to the ZipCPU blog!  This is my first blog post, and so it is
a chance to introduce myself, the ZipCPU, and some of the insights I’ve come 
across while
&lt;a href=&quot;https://forum.digilentinc.com/profile/1454-dn/&quot;&gt;answering help requests&lt;/a&gt;
on the &lt;a href=&quot;https://forum.digilentinc.com&quot;&gt;Digilent forums&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Since this is also my first blog, please feel free to &lt;a href=&quot;&amp;#109;&amp;#097;&amp;#105;&amp;#108;&amp;#116;&amp;#111;:&amp;#122;&amp;#105;&amp;#112;&amp;#099;&amp;#112;&amp;#117;&amp;#064;&amp;#103;&amp;#109;&amp;#097;&amp;#105;&amp;#108;&amp;#046;&amp;#099;&amp;#111;&amp;#109;&quot;&gt;write to
me&lt;/a&gt; regarding any errors you find in this web-site:
broken links, broken web code, etc.&lt;/p&gt;

&lt;p&gt;I am the owner of a small company, Gisselquist Technology, LLC, a services based
company focused on providing superior Computer Engineering and Signal Processing
Services to our customers.  I am also a 20 year veteran of the U.S. Air Force.
While in the Air Force, I sought out and worked on the most difficult
engineering challenges our nation faced.  Now, after a Ph.D. and 20 years of
service, I have focused my energies on the
&lt;a href=&quot;https://github.com/ZipCPU/zipcpu&quot;&gt;ZipCPU&lt;/a&gt; and the environment,
toolsuite, and &lt;a href=&quot;https://github.com/ZipCPU&quot;&gt;peripherals&lt;/a&gt; necessary to support
both it and any customer applications.&lt;/p&gt;

&lt;p&gt;I’d like to use this blog to share some of the lessons I have learned over the
years.  These include both Digital Signal Processing topics, as well as FPGA
design topics.  While some of these topics may be self serving, such as how to
set up the ZipCPU, I’d like to address other topics which are often the subject
of Digilent forum requests.  I’m planning on my first topic being &lt;em&gt;how&lt;/em&gt; &lt;em&gt;to&lt;/em&gt;
&lt;em&gt;debug&lt;/em&gt; &lt;em&gt;an&lt;/em&gt; &lt;em&gt;FPGA&lt;/em&gt; &lt;em&gt;design&lt;/em&gt;, especially since so many junior engineering
students writing in to &lt;a href=&quot;https://forum.digilentinc.com&quot;&gt;Digilent’s forums&lt;/a&gt;
don’t seem to know how to do that.&lt;/p&gt;

&lt;p&gt;Over time, I’d also like to answer the question of how to achieve &lt;a href=&quot;https://forum.digilentinc.com/topic/4131-just-for-fun-frequency-resolution-challenge/&quot;&gt;very clear
frequency resolution&lt;/a&gt; when doing FFT processing, or &lt;a href=&quot;https://github.com/ZipCPU/interpolation/blob/master/tutorial.pdf&quot;&gt;how to build
a universal resampler&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Dan&lt;/p&gt;
</description>
        <pubDate>Wed, 17 May 2017 00:00:00 -0400</pubDate>
        <link>http://zipcpu.com/blog/2017/05/17/welcome.html</link>
        <guid isPermaLink="true">http://zipcpu.com/blog/2017/05/17/welcome.html</guid>
        
        
        <category>blog</category>
        
      </item>
    
  </channel>
</rss>
